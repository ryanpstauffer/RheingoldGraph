# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import rheingoldgraph.protobuf.rheingoldgraph_pb2 as rheingoldgraph__pb2


class RheingoldGraphStub(object):
  """RheingoldGraph service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSummary = channel.unary_unary(
        '/rheingoldgraph.RheingoldGraph/GetSummary',
        request_serializer=rheingoldgraph__pb2.SummaryRequest.SerializeToString,
        response_deserializer=rheingoldgraph__pb2.GraphSummary.FromString,
        )
    self.GetLine = channel.unary_unary(
        '/rheingoldgraph.RheingoldGraph/GetLine',
        request_serializer=rheingoldgraph__pb2.LineRequest.SerializeToString,
        response_deserializer=rheingoldgraph__pb2.Line.FromString,
        )
    self.DropLine = channel.unary_unary(
        '/rheingoldgraph.RheingoldGraph/DropLine',
        request_serializer=rheingoldgraph__pb2.LineRequest.SerializeToString,
        response_deserializer=rheingoldgraph__pb2.DropResponse.FromString,
        )
    self.SearchLines = channel.unary_stream(
        '/rheingoldgraph.RheingoldGraph/SearchLines',
        request_serializer=rheingoldgraph__pb2.HeaderMetadata.SerializeToString,
        response_deserializer=rheingoldgraph__pb2.Line.FromString,
        )
    self.AddLine = channel.unary_unary(
        '/rheingoldgraph.RheingoldGraph/AddLine',
        request_serializer=rheingoldgraph__pb2.Line.SerializeToString,
        response_deserializer=rheingoldgraph__pb2.LineSummary.FromString,
        )


class RheingoldGraphServicer(object):
  """RheingoldGraph service definition.
  """

  def GetSummary(self, request, context):
    """Get a summary of musical information stored in our graph.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLine(self, request, context):
    """Get a Line 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DropLine(self, request, context):
    """Remove a line and all associated musical content
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchLines(self, request, context):
    """Add lines in the graph from an XML file
    rpc AddLinesFromXML (XMLRequest) returns (AddResponse) {}

    Search lines in the graph by Header Metadata
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddLine(self, request, context):
    """Add Line
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RheingoldGraphServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSummary': grpc.unary_unary_rpc_method_handler(
          servicer.GetSummary,
          request_deserializer=rheingoldgraph__pb2.SummaryRequest.FromString,
          response_serializer=rheingoldgraph__pb2.GraphSummary.SerializeToString,
      ),
      'GetLine': grpc.unary_unary_rpc_method_handler(
          servicer.GetLine,
          request_deserializer=rheingoldgraph__pb2.LineRequest.FromString,
          response_serializer=rheingoldgraph__pb2.Line.SerializeToString,
      ),
      'DropLine': grpc.unary_unary_rpc_method_handler(
          servicer.DropLine,
          request_deserializer=rheingoldgraph__pb2.LineRequest.FromString,
          response_serializer=rheingoldgraph__pb2.DropResponse.SerializeToString,
      ),
      'SearchLines': grpc.unary_stream_rpc_method_handler(
          servicer.SearchLines,
          request_deserializer=rheingoldgraph__pb2.HeaderMetadata.FromString,
          response_serializer=rheingoldgraph__pb2.Line.SerializeToString,
      ),
      'AddLine': grpc.unary_unary_rpc_method_handler(
          servicer.AddLine,
          request_deserializer=rheingoldgraph__pb2.Line.FromString,
          response_serializer=rheingoldgraph__pb2.LineSummary.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rheingoldgraph.RheingoldGraph', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
